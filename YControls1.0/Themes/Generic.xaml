<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:windowbase="clr-namespace:YControls.AreaIconWindow"
                    xmlns:slide="clr-namespace:YControls.SlideControls"
                    xmlns:fontbutton="clr-namespace:YControls.FontIconButtons"
                    xmlns:dialog="clr-namespace:YControls.Dialogs"
                    xmlns:text="clr-namespace:YControls.TextControls"
                    xmlns:flow="clr-namespace:YControls.FlowControls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/YControls;component/Themes/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--#region                                                         -->
    <!--YT_Controls Default Styles-->
    <!--#endregion-->

    <!--#region                                                         WindowAbout-->

    <!--YT_SizeBorder-->
    <Style TargetType="windowbase:YT_SizeBorder">
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
    </Style>

    <!--YT_TitleBar-->
    <Style TargetType="windowbase:YT_TitleBar">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="MaxHeight"
                Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="windowbase:YT_TitleBar">
                    <Grid x:Name="TitleHolder"
                          Height="{TemplateBinding MaxHeight}"
                          Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          ContentSource="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <ContentPresenter.Clip>
                                <RectangleGeometry x:Name="Mask">
                                    <RectangleGeometry.Transform>
                                        <TranslateTransform x:Name="MaskTanslate" />
                                    </RectangleGeometry.Transform>
                                </RectangleGeometry>
                            </ContentPresenter.Clip>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--YT_Window-->
    <Style TargetType="windowbase:YT_Window">
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="Width"
                Value="720" />
        <Setter Property="Height"
                Value="480" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="windowbase:YT_Window">
                    <Border Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <AdornerDecorator x:Name="Content"
                                              Grid.Row="1">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                            <windowbase:YT_TitleBar x:Name="TitleBar"
                                                    Background="Transparent"
                                                    AutoHide="{TemplateBinding AutoHideTitleBar}"
                                                    MaxHeight="{TemplateBinding TitleHeight}"
                                                    Content="{TemplateBinding TitleArea}" />
                            <windowbase:YT_SizeBorder Grid.Row="0"
                                                      Grid.RowSpan="2"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      AttachedWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=windowbase:YT_Window}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExtendToTitleBar"
                                 Value="true">
                            <Setter TargetName="Content"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="Content"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region                                                         ButtonAbout-->

    <!--FontIconButton-->
    <sys:Double x:Key="DefaultToolTipFontSize">12</sys:Double>
    <Style x:Key="DefaultToolTipStyle"
           TargetType="ToolTip">
        <Setter Property="Placement"
                Value="MousePoint" />
        <Setter Property="HorizontalOffset"
                Value="8" />
        <Setter Property="VerticalOffset"
                Value="24" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="DataContext"
                Value="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=Self}}" />
    </Style>
    <Style x:Key="DefaultToolTipTextBlockStyle"
           TargetType="TextBlock">
        <Setter Property="Margin"
                Value="6,3" />
        <Setter Property="FontSize"
                Value="{StaticResource DefaultToolTipFontSize}" />
    </Style>
    <Style TargetType="fontbutton:FIconButton">
        <Setter Property="FontFamily"
                Value="{StaticResource Segoe}" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="IconFgNormal"
                Value="Black" />
        <Setter Property="IconTextAlignment"
                Value="Center" />
        <Setter Property="IconHorizontalAlignment"
                Value="Center" />
        <Setter Property="IconVerticalAlignment"
                Value="Center" />
        <Setter Property="LabelFontSize"
                Value="12" />
        <Setter Property="LabelFgNormal"
                Value="Black" />
        <Setter Property="LabelTextAlignment"
                Value="Center" />
        <Setter Property="LabelVerticalAlignment"
                Value="Center" />
        <Setter Property="LabelHorizontalAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="#808080" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="ToolTipStyle"
                Value="{StaticResource DefaultToolTipStyle}" />
        <Setter Property="ToolTipTextStyle"
                Value="{StaticResource DefaultToolTipTextBlockStyle}" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Style="{Binding ToolTipStyle}"
                         Visibility="{Binding ToolTipString,Converter={StaticResource VisibilityConverter}}"
                         DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=Self}}">
                    <TextBlock Style="{Binding ToolTipTextStyle}"
                               Text="{Binding ToolTipString}" />
                </ToolTip>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="fontbutton:FIconButton">
                    <Border x:Name="rborder"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            SnapsToDevicePixels="True">
                        <Grid x:Name="rgrid"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="B_Icon_layer"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="1"
                                  Grid.Row="0"
                                  Grid.RowSpan="3"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Visibility="{TemplateBinding IconVisibility}"
                                  Background="{TemplateBinding IconBgNormal}">
                                <TextBlock x:Name="B_Icon"
                                           Text="{TemplateBinding Content}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           Margin="{TemplateBinding IconMargin}"
                                           TextAlignment="{TemplateBinding IconTextAlignment}"
                                           HorizontalAlignment="{TemplateBinding IconHorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding IconVerticalAlignment}"
                                           Foreground="{TemplateBinding IconFgNormal}" />
                            </Grid>
                            <Grid x:Name="B_Label_layer"
                                  Grid.Column="1"
                                  Grid.ColumnSpan="2"
                                  Grid.Row="0"
                                  Grid.RowSpan="3"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Visibility="{TemplateBinding LabelVisibility}"
                                  Background="{TemplateBinding LabelBgNormal}">
                                <TextBlock x:Name="B_Label"
                                           Text="{TemplateBinding LabelString}"
                                           FontFamily="{TemplateBinding LabelFontFamily}"
                                           FontSize="{TemplateBinding LabelFontSize}"
                                           FontWeight="{TemplateBinding LabelFontWeight}"
                                           Margin="{TemplateBinding LabelMargin}"
                                           TextAlignment="{TemplateBinding LabelTextAlignment}"
                                           HorizontalAlignment="{TemplateBinding LabelHorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding LabelVerticalAlignment}"
                                           Foreground="{TemplateBinding LabelFgNormal}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="LabelVisibility"
                                 Value="Collapsed">
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.RowSpan"
                                    Value="3" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="1" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.RowSpan"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="B_Icon"
                                    Property="Foreground"
                                    Value="{Binding IconFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Background"
                                    Value="{Binding IconBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label"
                                    Property="Foreground"
                                    Value="{Binding LabelFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Background"
                                    Value="{Binding LabelBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="B_Icon"
                                    Property="Foreground"
                                    Value="{Binding IconFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Background"
                                    Value="{Binding IconBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label"
                                    Property="Foreground"
                                    Value="{Binding LabelFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Background"
                                    Value="{Binding LabelBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="B_Icon"
                                    Property="Foreground"
                                    Value="{Binding IconFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Background"
                                    Value="{Binding IconBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label"
                                    Property="Foreground"
                                    Value="{Binding LabelFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Background"
                                    Value="{Binding LabelBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger x:Name="Normal_LabelLeft">
                            <MultiTrigger.Conditions>
                                <Condition Property="IconLayout"
                                           Value="LabelLeft" />
                                <Condition Property="LabelVisibility"
                                           Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Column"
                                    Value="2" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="1" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.RowSpan"
                                    Value="3" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="2" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.RowSpan"
                                    Value="3" />
                        </MultiTrigger>
                        <MultiTrigger x:Name="Normal_IconTop">
                            <MultiTrigger.Conditions>
                                <Condition Property="IconLayout"
                                           Value="IconTop" />
                                <Condition Property="LabelVisibility"
                                           Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.RowSpan"
                                    Value="1" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Row"
                                    Value="1" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                        </MultiTrigger>
                        <MultiTrigger x:Name="Normal_LabelTop">
                            <MultiTrigger.Conditions>
                                <Condition Property="IconLayout"
                                           Value="LabelTop" />
                                <Condition Property="LabelVisibility"
                                           Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Row"
                                    Value="2" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.RowSpan"
                                    Value="1" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--FIconToggleButton-->
    <Style TargetType="fontbutton:FIconToggleButton">
        <Setter Property="FontFamily"
                Value="{StaticResource Segoe}" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="IconFgNormal"
                Value="Black" />
        <Setter Property="IconTextAlignment"
                Value="Center" />
        <Setter Property="IconHorizontalAlignment"
                Value="Center" />
        <Setter Property="IconVerticalAlignment"
                Value="Center" />
        <Setter Property="LabelFontSize"
                Value="12" />
        <Setter Property="LabelFgNormal"
                Value="Black" />
        <Setter Property="LabelTextAlignment"
                Value="Center" />
        <Setter Property="LabelVerticalAlignment"
                Value="Center" />
        <Setter Property="LabelHorizontalAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="#808080" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="ToolTipStyle"
                Value="{StaticResource DefaultToolTipStyle}" />
        <Setter Property="ToolTipTextStyle"
                Value="{StaticResource DefaultToolTipTextBlockStyle}" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Style="{Binding ToolTipStyle}"
                         Visibility="{Binding ToolTipString,Converter={StaticResource VisibilityConverter}}"
                         DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=Self}}">
                    <TextBlock Style="{Binding ToolTipTextStyle}"
                               Text="{Binding ToolTipString}" />
                </ToolTip>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="fontbutton:FIconToggleButton">
                    <Border x:Name="rborder"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid x:Name="rgrid"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="B_Icon_layer"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="1"
                                  Grid.Row="0"
                                  Grid.RowSpan="3"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Visibility="{TemplateBinding IconVisibility}"
                                  Background="{TemplateBinding IconBgNormal}">
                                <TextBlock x:Name="B_Icon"
                                           Text="{TemplateBinding Content}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           Margin="{TemplateBinding IconMargin}"
                                           TextAlignment="{TemplateBinding IconTextAlignment}"
                                           HorizontalAlignment="{TemplateBinding IconHorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding IconVerticalAlignment}"
                                           Foreground="{TemplateBinding IconFgNormal}" />
                            </Grid>
                            <Grid x:Name="B_Label_layer"
                                  Grid.Column="1"
                                  Grid.ColumnSpan="2"
                                  Grid.Row="0"
                                  Grid.RowSpan="3"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Visibility="{TemplateBinding LabelVisibility}"
                                  Background="{TemplateBinding LabelBgNormal}">
                                <TextBlock x:Name="B_Label"
                                           Text="{TemplateBinding LabelString}"
                                           FontFamily="{TemplateBinding LabelFontFamily}"
                                           FontSize="{TemplateBinding LabelFontSize}"
                                           FontWeight="{TemplateBinding LabelFontWeight}"
                                           Margin="{TemplateBinding LabelMargin}"
                                           TextAlignment="{TemplateBinding LabelTextAlignment}"
                                           HorizontalAlignment="{TemplateBinding LabelHorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding LabelVerticalAlignment}"
                                           Foreground="{TemplateBinding LabelFgNormal}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="B_Icon"
                                    Property="Foreground"
                                    Value="{Binding IconSelectFgNormal,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Background"
                                    Value="{Binding IconSelectBgNormal,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label"
                                    Property="Foreground"
                                    Value="{Binding LabelSelectFgNormal,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Background"
                                    Value="{Binding LabelSelectBgNormal,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Icon"
                                    Property="Text"
                                    Value="{Binding IconSelect, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label"
                                    Property="Text"
                                    Value="{Binding LabelSelect, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="LabelVisibility"
                                 Value="Collapsed">
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.RowSpan"
                                    Value="3" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="1" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.RowSpan"
                                    Value="1" />
                        </Trigger>
                        <MultiTrigger x:Name="UnCheck_Over">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="Check_Over">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconSelectFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconSelectBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelSelectFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelSelectBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="UnCheck_Press">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="Check_Press">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconSelectFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconSelectBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelSelectFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelSelectBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="UnCheck_Disable">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="Check_Disable">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconSelectFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconSelectBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelSelectFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelSelectBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="Normal_LabelLeft">
                            <MultiTrigger.Conditions>
                                <Condition Property="IconLayout"
                                           Value="LabelLeft" />
                                <Condition Property="LabelVisibility"
                                           Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Column"
                                    Value="2" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="1" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.RowSpan"
                                    Value="3" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="2" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.RowSpan"
                                    Value="3" />
                        </MultiTrigger>
                        <MultiTrigger x:Name="Normal_IconTop">
                            <MultiTrigger.Conditions>
                                <Condition Property="IconLayout"
                                           Value="IconTop" />
                                <Condition Property="LabelVisibility"
                                           Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.RowSpan"
                                    Value="1" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Row"
                                    Value="1" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                        </MultiTrigger>
                        <MultiTrigger x:Name="Normal_LabelTop">
                            <MultiTrigger.Conditions>
                                <Condition Property="IconLayout"
                                           Value="LabelTop" />
                                <Condition Property="LabelVisibility"
                                           Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.Row"
                                    Value="2" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Grid.RowSpan"
                                    Value="1" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region                                                         TextControls-->

    <!--YT_TextBox-->
    <Style TargetType="text:YT_TextBox">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="MinHeight"
                Value="24" />
        <Setter Property="MinWidth"
                Value="180" />
        <Setter Property="PlaceHolderMargin"
                Value="4,0,0,0" />
        <Setter Property="TextMargin"
                Value="0,2,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="text:YT_TextBox">
                    <Border x:Name="rborder"
                            Cursor="IBeam"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="rgrid"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}">
                            <TextBlock x:Name="YT_PlaceHolder"
                                       IsHitTestVisible="False"
                                       Foreground="{TemplateBinding Foreground}"
                                       Visibility="{Binding PlaceHolderText, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource VisibilityConverter}}"
                                       Text="{TemplateBinding PlaceHolderText}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Margin="{TemplateBinding PlaceHolderMargin}" />
                            <ScrollViewer x:Name="PART_ContentHost"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                          Margin="{TemplateBinding TextMargin}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region                                                         FlowControls-->

    <!--YT_ContextMenu-->
    <Style TargetType="flow:YT_ContextMenu">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Padding"
                Value="-1" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="flow:YT_ContextMenu">
                    <Border x:Name="rborder"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Margin}">
                        <Grid x:Name="rgrid"
                              Margin="{TemplateBinding Padding}">
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--YT_MenuItem-->
    <Style TargetType="flow:YT_MenuItem">
        <Setter Property="IsCheckable"
                Value="False" />
        <Setter Property="FontFamily"
                Value="{StaticResource Segoe}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="flow:YT_MenuItem">
                    <Border x:Name="rborder"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            SnapsToDevicePixels="True">
                        <Grid x:Name="rgrid"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="B_Icon_layer"
                                  Grid.Column="0"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Visibility="{TemplateBinding IconVisibility}"
                                  Background="{TemplateBinding IconBgNormal}">
                                <TextBlock x:Name="B_Icon"
                                           Text="{TemplateBinding Icon}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           Margin="{TemplateBinding IconMargin}"
                                           TextAlignment="{TemplateBinding IconTextAlignment}"
                                           HorizontalAlignment="{TemplateBinding IconHorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding IconVerticalAlignment}"
                                           Foreground="{TemplateBinding IconFgNormal}" />
                            </Grid>
                            <Grid x:Name="B_Label_layer"
                                  Grid.Column="1"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Visibility="{TemplateBinding LabelVisibility}"
                                  Background="{TemplateBinding LabelBgNormal}">
                                <TextBlock x:Name="B_Label"
                                           Text="{TemplateBinding LabelString}"
                                           FontFamily="{TemplateBinding LabelFontFamily}"
                                           FontSize="{TemplateBinding LabelFontSize}"
                                           FontWeight="{TemplateBinding LabelFontWeight}"
                                           Margin="{TemplateBinding LabelMargin}"
                                           TextAlignment="{TemplateBinding LabelTextAlignment}"
                                           HorizontalAlignment="{TemplateBinding LabelHorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding LabelVerticalAlignment}"
                                           Foreground="{TemplateBinding LabelFgNormal}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="B_Icon"
                                    Property="Foreground"
                                    Value="{Binding IconSelectFgNormal,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Icon_layer"
                                    Property="Background"
                                    Value="{Binding IconSelectBgNormal,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label"
                                    Property="Foreground"
                                    Value="{Binding LabelSelectFgNormal,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label_layer"
                                    Property="Background"
                                    Value="{Binding LabelSelectBgNormal,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Icon"
                                    Property="Text"
                                    Value="{Binding IconSelect, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="B_Label"
                                    Property="Text"
                                    Value="{Binding LabelSelect, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger x:Name="UnCheck_Over">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="Check_Over">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconSelectFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconSelectBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelSelectFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelSelectBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="UnCheck_Press">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="Check_Press">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconSelectFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconSelectBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelSelectFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelSelectBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="UnCheck_Disable">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger x:Name="Check_Disable">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="B_Icon"
                                        Property="Foreground"
                                        Value="{Binding IconSelectFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Icon_layer"
                                        Property="Background"
                                        Value="{Binding IconSelectBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label"
                                        Property="Foreground"
                                        Value="{Binding LabelSelectFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="B_Label_layer"
                                        Property="Background"
                                        Value="{Binding LabelSelectBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region                                                         SlideControls-->

    <!--IconThumb-->
    <Style TargetType="slide:YT_Thumb">
        <Setter Property="IconFont"
                Value="{StaticResource Segoe}" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="ToolTipStyle"
                Value="{StaticResource DefaultToolTipStyle}" />
        <Setter Property="ToolTipTextStyle"
                Value="{StaticResource DefaultToolTipTextBlockStyle}" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Style="{Binding ToolTipStyle}"
                         Visibility="{Binding ToolTipVisibility}"
                         DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=Self}}">
                    <TextBlock Style="{Binding ToolTipTextStyle}"
                               Text="{Binding ToolTipString}" />
                </ToolTip>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="slide:YT_Thumb">
                    <Grid x:Name="rgrid"
                          Margin="{TemplateBinding Padding}">
                        <Grid x:Name="Thumb_Path"
                              Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Canvas x:Name="PathH"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    Width="20"
                                    Height="20">
                                <Path Fill="{Binding Fill, ElementName=MainPath}"
                                      Stroke="{Binding Stroke, ElementName=MainPath}"
                                      StrokeThickness="{TemplateBinding StrokeThickness}"
                                      Data="{Binding PathCapLoT, RelativeSource={RelativeSource Mode=TemplatedParent} }" />
                            </Canvas>
                            <Viewbox Stretch="Fill"
                                     Grid.Column="1"
                                     Grid.Row="1">
                                <Canvas Width="20"
                                        Height="20">
                                    <Path x:Name="MainPath"
                                          StrokeThickness="{TemplateBinding StrokeThickness}"
                                          Stroke="{TemplateBinding IconBgNormal}"
                                          Fill="{TemplateBinding IconFgNormal}"
                                          Data="{Binding ThumbIcon, RelativeSource={RelativeSource Mode=TemplatedParent} }" />
                                </Canvas>
                            </Viewbox>
                            <Canvas x:Name="PathT"
                                    Grid.Column="1"
                                    Grid.Row="2"
                                    Width="20"
                                    Height="20">
                                <Path Fill="{Binding Fill, ElementName=MainPath}"
                                      Stroke="{Binding Stroke, ElementName=MainPath}"
                                      StrokeThickness="{TemplateBinding StrokeThickness}"
                                      Data="{Binding PathCapRoB, RelativeSource={RelativeSource Mode=TemplatedParent} }" />
                            </Canvas>
                        </Grid>
                        <TextBlock x:Name="Thumb_Font"
                                   Visibility="Collapsed"
                                   VerticalAlignment="Stretch"
                                   HorizontalAlignment="Stretch"
                                   Background="{Binding Stroke, ElementName=MainPath}"
                                   TextAlignment="{TemplateBinding IconTextAlignment}"
                                   Margin="{TemplateBinding IconMargin}"
                                   Foreground="{Binding Fill, ElementName=MainPath}"
                                   FontFamily="{TemplateBinding IconFont}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   Text="{TemplateBinding ThumbIcon}" />
                        <Rectangle x:Name="Thumb_Rect"
                                   Visibility="Visible"
                                   StrokeThickness="{TemplateBinding StrokeThickness}"
                                   Stroke="{Binding Stroke, ElementName=MainPath}"
                                   Fill="{Binding Fill, ElementName=MainPath}" />
                        <Ellipse x:Name="Thumb_Ellipse"
                                 Visibility="Collapsed"
                                 StrokeThickness="{TemplateBinding StrokeThickness}"
                                 Stroke="{Binding Stroke, ElementName=MainPath}"
                                 Fill="{Binding Fill, ElementName=MainPath}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation"
                                 Value="Horizontal">
                            <Setter TargetName="PathH"
                                    Property="Grid.Row"
                                    Value="1" />
                            <Setter TargetName="PathH"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="PathT"
                                    Property="Grid.Row"
                                    Value="1" />
                            <Setter TargetName="PathT"
                                    Property="Grid.Column"
                                    Value="2" />
                        </Trigger>
                        <Trigger Property="IconMode"
                                 Value="FontIcon">
                            <Setter TargetName="Thumb_Path"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Font"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="Thumb_Rect"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Ellipse"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IconMode"
                                 Value="Path">
                            <Setter TargetName="Thumb_Path"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="Thumb_Font"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Rect"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Ellipse"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IconMode"
                                 Value="Ellipse">
                            <Setter TargetName="Thumb_Path"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Font"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Rect"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Ellipse"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="IconMode"
                                 Value="PathMain">
                            <Setter TargetName="Thumb_Path"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="PathH"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="PathT"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Font"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Rect"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Thumb_Ellipse"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="MainPath"
                                    Property="Fill"
                                    Value="{Binding IconFgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="MainPath"
                                    Property="Stroke"
                                    Value="{Binding IconBgDisabled,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDragging"
                                           Value="false" />
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainPath"
                                    Property="Fill"
                                    Value="{Binding IconFgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="MainPath"
                                    Property="Stroke"
                                    Value="{Binding IconBgOver,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDragging"
                                           Value="true" />
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainPath"
                                    Property="Fill"
                                    Value="{Binding IconFgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="MainPath"
                                    Property="Stroke"
                                    Value="{Binding IconBgPressed,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--YT_Scrollbar-->
    <sys:Double x:Key="DefaultScrollbarThickness">24</sys:Double>
    <sys:Int32 x:Key="DefaultScrollbarInterval">50</sys:Int32>
    <Style x:Key="DefaultScrollRepeatButton"
           TargetType="RepeatButton">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="slide:YT_Scrollbar">
        <Setter Property="Orientation"
                Value="Vertical" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="DecreaseButtonVertival"
                Value="{StaticResource DefaultScrollRepeatButton}" />
        <Setter Property="IncreaseButtonVertival"
                Value="{StaticResource DefaultScrollRepeatButton}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="slide:YT_Scrollbar">
                    <Grid SnapsToDevicePixels="True">
                        <Track x:Name="PART_Track"
                               Margin="0"
                               Width="{TemplateBinding Width}"
                               Maximum="{TemplateBinding Maximum}"
                               Minimum="{TemplateBinding Minimum}"
                               Value="{TemplateBinding Value}"
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="VeticalLargeDecrease"
                                              Style="{TemplateBinding DecreaseButtonVertival}"
                                              Command="{x:Static ScrollBar.PageUpCommand}"
                                              IsTabStop="False"
                                              Interval="{StaticResource DefaultScrollbarInterval}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <slide:YT_Thumb Style="{TemplateBinding ThumbVertival}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="VeticalLargeIncrease"
                                              Style="{TemplateBinding IncreaseButtonVertival}"
                                              Command="{x:Static ScrollBar.PageDownCommand}"
                                              IsTabStop="False"
                                              Interval="{StaticResource DefaultScrollbarInterval}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="NaN" />
                <Setter Property="Height"
                        Value="{StaticResource YT_ScrollbarDefaultThickness}" />
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter Property="DecreaseButtonHorizontal"
                        Value="{StaticResource ScrollRepeatButton}" />
                <Setter Property="IncreaseButtonHorizontal"
                        Value="{StaticResource ScrollRepeatButton}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="slide:YT_Scrollbar">
                            <Grid SnapsToDevicePixels="True">
                                <Track x:Name="PART_Track"
                                       Margin="0"
                                       Height="{TemplateBinding Height}"
                                       Maximum="{TemplateBinding Maximum}"
                                       Minimum="{TemplateBinding Minimum}"
                                       Value="{TemplateBinding Value}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="HorizontalLargeDecrease"
                                                      Style="{TemplateBinding DecreaseButtonHorizontal}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      IsTabStop="False"
                                                      Interval="{StaticResource DefaultScrollbarInterval}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <slide:YT_Thumb Style="{TemplateBinding ThumbHorizontal}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="HorizontalLargeIncrease"
                                                      Style="{TemplateBinding IncreaseButtonHorizontal}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"
                                                      IsTabStop="False"
                                                      Interval="{StaticResource DefaultScrollbarInterval}" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--YT_ScrollViewer-->
    <Style TargetType="slide:YT_ScrollViewer">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ScrollbarThickness"
                Value="{StaticResource DefaultScrollbarThickness}" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="slide:YT_ScrollViewer">
                    <Border x:Name="rborder"
                            Background="{x:Null}"
                            Margin="{TemplateBinding Margin}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="rgrid"
                              ClipToBounds="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Grid.Column="0"
                                                    Grid.Row="0"
                                                    Grid.ColumnSpan="1"
                                                    Grid.RowSpan="1"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                            <Grid x:Name="VerticalScrollBarPanel"
                                  Grid.Column="1"
                                  Grid.Row="0"
                                  Background="Transparent"
                                  Width="{TemplateBinding ScrollbarThickness}"
                                  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                <slide:YT_Scrollbar x:Name="PART_VerticalScrollBar"
                                                    AutomationProperties.AutomationId="VerticalScrollBar"
                                                    Maximum="{TemplateBinding ScrollableHeight}"
                                                    Minimum="0"
                                                    Orientation="Vertical"
                                                    Style="{TemplateBinding VerticalScrollBarStyle}"
                                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                                    Value="{TemplateBinding VerticalOffset}"
                                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                    <slide:YT_Scrollbar.RenderTransform>
                                        <TranslateTransform x:Name="VerticalTranslate" />
                                    </slide:YT_Scrollbar.RenderTransform>
                                </slide:YT_Scrollbar>
                            </Grid>
                            <Grid x:Name="HorizontalScrollBarPanel"
                                  Grid.Column="0"
                                  Grid.Row="1"
                                  Background="Transparent"
                                  Height="{TemplateBinding ScrollbarThickness}"
                                  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                                <slide:YT_Scrollbar x:Name="PART_HorizontalScrollBar"
                                                    AutomationProperties.AutomationId="HorizontalScrollBar"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    Minimum="0"
                                                    Orientation="Horizontal"
                                                    Style="{TemplateBinding HorizontalScrollBarStyle}"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Value="{TemplateBinding HorizontalOffset}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                                    <slide:YT_Scrollbar.RenderTransform>
                                        <TranslateTransform x:Name="HorizontalTranslate" />
                                    </slide:YT_Scrollbar.RenderTransform>
                                </slide:YT_Scrollbar>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ScrollbarLayout"
                                 Value="Over">
                            <Setter TargetName="PART_ScrollContentPresenter"
                                    Property="Grid.ColumnSpan"
                                    Value="2" />
                            <Setter TargetName="PART_ScrollContentPresenter"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--YT_Slider-->
    <sys:Double x:Key="DefaultSliderThumbSize">8</sys:Double>
    <sys:Double x:Key="DefaultSliderTrackThickness">4</sys:Double>
    <sys:String x:Key="DefaultValueFormat"
                xml:space="preserve">Value : {0:F2}</sys:String>
    <Style x:Key="DefaultSliderDecreaseButton"
           TargetType="RepeatButton">
        <Setter Property="Background"
                Value="#006688" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Height"
                Value="{StaticResource DefaultSliderTrackThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultSliderIncreaseButton"
           TargetType="RepeatButton">
        <Setter Property="Background"
                Value="#606060" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Height"
                Value="{StaticResource DefaultSliderTrackThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultSliderThumbStyle"
           TargetType="slide:YT_Thumb">
        <Setter Property="Width"
                Value="{StaticResource DefaultSliderThumbSize}" />
        <Setter Property="Height"
                Value="{StaticResource DefaultSliderThumbSize}" />
        <Setter Property="IconMode"
                Value="Ellipse" />
        <Setter Property="StrokeThickness"
                Value="2" />
        <Setter Property="ThumbIcon"
                Value="M 5,1.34 L 15,1.34 L 20,10 L 15,18.66 L5,18.66 L 0,10 Z" />
        <Setter Property="IconFgNormal"
                Value="#c0c0c0" />
        <Setter Property="IconFgOver"
                Value="#00bbee" />
        <Setter Property="IconFgPressed"
                Value="#006688" />
        <Setter Property="IconBgNormal"
                Value="#c0c0c0" />
        <Setter Property="IconBgOver"
                Value="#ffffff" />
        <Setter Property="IconBgPressed"
                Value="#ffffff" />
    </Style>
    <Style TargetType="slide:YT_Slider">
        <Setter Property="Orientation"
                Value="Vertical" />
        <Setter Property="ThumbVertival"
                Value="{StaticResource DefaultSliderThumbStyle}" />
        <Setter Property="ThumbHorizontal"
                Value="{StaticResource DefaultSliderThumbStyle}" />
        <Setter Property="IncreaseButtonVertival"
                Value="{StaticResource DefaultSliderIncreaseButton}" />
        <Setter Property="DecreaseButtonVertival"
                Value="{StaticResource DefaultSliderDecreaseButton}" />
        <Setter Property="IncreaseButtonHorizontal"
                Value="{StaticResource DefaultSliderIncreaseButton}" />
        <Setter Property="DecreaseButtonHorizontal"
                Value="{StaticResource DefaultSliderDecreaseButton}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="slide:YT_Slider">
                    <Border x:Name="rborder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="rgrid"
                              Margin="{TemplateBinding Padding}"
                              ClipToBounds="True">
                            <Track x:Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                                  Style="{TemplateBinding DecreaseButtonVertival}" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <slide:YT_Thumb x:Name="Thumb"
                                                    ToolTipVisibility="{TemplateBinding ThumbToolTipVisiblity}"
                                                    ToolTipString="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource StringConverter},ConverterParameter={StaticResource DefaultValueFormat}}"
                                                    Focusable="{TemplateBinding Focusable}"
                                                    Style="{TemplateBinding ThumbVertival}"
                                                    HorizontalAlignment="Center" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                                  Style="{TemplateBinding IncreaseButtonVertival}" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="slide:YT_Slider">
                            <Border x:Name="rborder"
                                    Background="{x:Null}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid x:Name="rgrid"
                                      ClipToBounds="True">
                                    <Track x:Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                                          Style="{TemplateBinding DecreaseButtonHorizontal}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <slide:YT_Thumb x:Name="Thumb"
                                                            ToolTipVisibility="{TemplateBinding ThumbToolTipVisiblity}"
                                                            ToolTipString="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource StringConverter},ConverterParameter={StaticResource DefaultValueFormat}}"
                                                            Focusable="{TemplateBinding Focusable}"
                                                            Style="{TemplateBinding ThumbHorizontal}"
                                                            VerticalAlignment="Center" />
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                                          Style="{TemplateBinding IncreaseButtonHorizontal}" />
                                        </Track.IncreaseRepeatButton>
                                    </Track>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region                                                         Dialog-->

    <!--YT_Dialog-->
    <sys:Double x:Key="DefaultDialogWidth">260</sys:Double>
    <sys:Double x:Key="DefaultDialogHeight">140</sys:Double>
    <Style x:Key="DefaultDialogBottomButtonStyle"
           TargetType="fontbutton:FIconButton">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Margin"
                Value="5,4,5,2" />
        <Setter Property="IconVisibility"
                Value="Collapsed" />
        <Setter Property="LabelMargin"
                Value="4,1" />
        <Setter Property="IconFgNormal"
                Value="Black" />
        <Setter Property="LabelFgNormal"
                Value="Black" />
        <Setter Property="IconFgOver"
                Value="Black" />
        <Setter Property="LabelFgOver"
                Value="Black" />
        <Setter Property="IconFgPressed"
                Value="Black" />
        <Setter Property="LabelFgPressed"
                Value="Black" />
        <Setter Property="IconBgNormal"
                Value="Transparent" />
        <Setter Property="LabelBgNormal"
                Value="Transparent" />
        <Setter Property="IconBgOver"
                Value="#8000aaff" />
        <Setter Property="LabelBgOver"
                Value="#8000aaff" />
        <Setter Property="IconBgPressed"
                Value="#c000aaff" />
        <Setter Property="LabelBgPressed"
                Value="#c000aaff" />
    </Style>
    <Style x:Key="DefaultDialogCancelButtonStyle"
           TargetType="fontbutton:FIconButton">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="LabelVisibility"
                Value="Collapsed" />
        <Setter Property="Margin"
                Value="0,2,2,0" />
        <Setter Property="Content"
                Value="&#xE106;" />
        <Setter Property="IconMargin"
                Value="2,2" />
        <Setter Property="IconFgNormal"
                Value="Black" />
        <Setter Property="IconFgOver"
                Value="Black" />
        <Setter Property="IconFgPressed"
                Value="Black" />
        <Setter Property="IconBgNormal"
                Value="Transparent" />
        <Setter Property="IconBgOver"
                Value="#8000aaff" />
        <Setter Property="IconBgPressed"
                Value="#c000aaff" />
    </Style>
    <Style TargetType="dialog:YT_DialogBase">
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="ShowInTaskbar"
                Value="False" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BottomButtonStyle"
                Value="{StaticResource DefaultDialogBottomButtonStyle}" />
        <Setter Property="CancelButtonStyle"
                Value="{StaticResource DefaultDialogCancelButtonStyle}" />
        <Setter Property="Height"
                Value="{StaticResource DefaultDialogHeight}" />
        <Setter Property="Width"
                Value="{StaticResource DefaultDialogWidth}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dialog:YT_DialogBase">
                    <Border x:Name="rborder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}">
                        <Grid x:Name="rgrid"
                              Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <AdornerDecorator x:Name="ContentLayer"
                                              Grid.Row="1">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                            <Grid x:Name="HeadLayer"
                                  Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <fontbutton:FIconButton  x:Name="Button_CANCEL"
                                                         Grid.Column="1"
                                                         Style="{TemplateBinding CancelButtonStyle}"
                                                         Visibility="{TemplateBinding CancelButtonVisibility}"
                                                         Command="{Binding CancelCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </Grid>
                            <Grid x:Name="FootLayer"
                                  Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <fontbutton:FIconButton x:Name="Button_YES"
                                                        Grid.Column="2"
                                                        Content="{TemplateBinding YesButtonIcon}"
                                                        LabelString="{TemplateBinding YesButtonLabel}"
                                                        Style="{TemplateBinding BottomButtonStyle}"
                                                        Visibility="{TemplateBinding YesButtonVisibility}"
                                                        Command="{Binding CancelCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <fontbutton:FIconButton  x:Name="Button_NO"
                                                         Grid.Column="3"
                                                         Content="{TemplateBinding NoButtonIcon}"
                                                         LabelString="{TemplateBinding NoButtonLabel}"
                                                         Style="{TemplateBinding BottomButtonStyle}"
                                                         Visibility="{TemplateBinding NoButtonVisibility}"
                                                         Command="{Binding  NoCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ControlLayout"
                                 Value="MessageStyle">
                            <Setter TargetName="ContentLayer"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="ContentLayer"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                            <Setter TargetName="HeadLayer"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                            <Setter TargetName="FootLayer"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ControlLayout"
                                 Value="ButtonBottomSeparate">
                            <Setter TargetName="Button_YES"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="Button_NO"
                                    Property="Grid.Column"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region                                                         FlowControls-->


    <!--#endregion-->


</ResourceDictionary>